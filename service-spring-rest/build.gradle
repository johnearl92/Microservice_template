buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.1.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
//apply plugin: 'war'

bootJar {
    baseName = 'gs-rest-service'
    version =  rootProject.spring_rest_version
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    testCompile('org.springframework.boot:spring-boot-starter-test')
// for war   providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
}
def dockerFilePath = "${rootProject.spring_rest_distrib_dir}/Dockerfile"

task distribution(type: Zip){
    dependsOn build
    destinationDir file(rootProject.spring_rest_distrib_dir)
    from 'README.md',bootJar.archivePath
    baseName "dockerize_spring_rest"
    version rootProject.spring_rest_version
    doLast {
        String contents = new File( "${project.projectDir}/Dockerfile" ).getText( 'UTF-8' )
        contents = contents.replaceAll( 'JAR_NAME_PLACEHOLDER', bootJar.archiveName )
        contents = contents.replaceAll( 'ARCHIVE_NAME_PLACEHOLDER', distribution.archiveName )
        new File( "${dockerFilePath}" ).write( contents, 'UTF-8' )
    }
}




